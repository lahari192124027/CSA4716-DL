import numpy as np
import pandas as pd
from sklearn.datasets import load_iris  # Added import for feature names

# Importing the dataset
dataset = pd.read_csv(r"C:\Users\kondu\Downloads\iris.data.csv")
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=8)

# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

# Training the Decision Tree Classification model on the Training set
from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(criterion='entropy', random_state=5)
classifier.fit(X_train, y_train)

# Display the Decision Tree
import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

# Get feature names from Iris dataset
iris = load_iris()
plt.figure(figsize=(20, 10))
plot_tree(classifier, filled=True, rounded=True, feature_names=iris.feature_names)
plt.show()

# Predicting the Test set results
y_pred = classifier.predict(X_test)

# Display the results (confusion matrix and accuracy)
from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(cm)
print("Accuracy Score:", accuracy_score(y_test, y_pred))
